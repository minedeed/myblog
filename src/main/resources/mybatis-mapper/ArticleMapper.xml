<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minedeed.blog.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.minedeed.blog.enity.Article">
    <id column="cid" jdbcType="INTEGER" property="cid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="slug" jdbcType="VARCHAR" property="slug" />
    <result column="created" jdbcType="INTEGER" property="created" />
    <result column="modified" jdbcType="INTEGER" property="modified" />
    <result column="order" jdbcType="INTEGER" property="order" />
    <result column="authorId" jdbcType="INTEGER" property="authorid" />
    <result column="template" jdbcType="VARCHAR" property="template" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="commentsNum" jdbcType="INTEGER" property="commentsnum" />
    <result column="allowComment" jdbcType="CHAR" property="allowcomment" />
    <result column="allowPing" jdbcType="CHAR" property="allowping" />
    <result column="allowFeed" jdbcType="CHAR" property="allowfeed" />
    <result column="parent" jdbcType="INTEGER" property="parent" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.minedeed.blog.enity.Article">
    <result column="text" jdbcType="LONGVARCHAR" property="text" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, title, slug, created, modified, order, authorId, template, type, status, password, 
    commentsNum, allowComment, allowPing, allowFeed, parent
  </sql>
  <sql id="Blob_Column_List">
    text
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.minedeed.blog.enity.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.minedeed.blog.enity.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.minedeed.blog.enity.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.minedeed.blog.enity.Article">
    insert into article (cid, title, slug, 
      created, modified, order, 
      authorId, template, type, 
      status, password, commentsNum, 
      allowComment, allowPing, allowFeed, 
      parent, text)
    values (#{cid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{slug,jdbcType=VARCHAR}, 
      #{created,jdbcType=INTEGER}, #{modified,jdbcType=INTEGER}, #{order,jdbcType=INTEGER}, 
      #{authorid,jdbcType=INTEGER}, #{template,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{commentsnum,jdbcType=INTEGER}, 
      #{allowcomment,jdbcType=CHAR}, #{allowping,jdbcType=CHAR}, #{allowfeed,jdbcType=CHAR}, 
      #{parent,jdbcType=INTEGER}, #{text,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.minedeed.blog.enity.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="slug != null">
        slug,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="modified != null">
        modified,
      </if>
      <if test="order != null">
        order,
      </if>
      <if test="authorid != null">
        authorId,
      </if>
      <if test="template != null">
        template,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="commentsnum != null">
        commentsNum,
      </if>
      <if test="allowcomment != null">
        allowComment,
      </if>
      <if test="allowping != null">
        allowPing,
      </if>
      <if test="allowfeed != null">
        allowFeed,
      </if>
      <if test="parent != null">
        parent,
      </if>
      <if test="text != null">
        text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="slug != null">
        #{slug,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        #{order,jdbcType=INTEGER},
      </if>
      <if test="authorid != null">
        #{authorid,jdbcType=INTEGER},
      </if>
      <if test="template != null">
        #{template,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="commentsnum != null">
        #{commentsnum,jdbcType=INTEGER},
      </if>
      <if test="allowcomment != null">
        #{allowcomment,jdbcType=CHAR},
      </if>
      <if test="allowping != null">
        #{allowping,jdbcType=CHAR},
      </if>
      <if test="allowfeed != null">
        #{allowfeed,jdbcType=CHAR},
      </if>
      <if test="parent != null">
        #{parent,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        #{text,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.minedeed.blog.enity.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.slug != null">
        slug = #{record.slug,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=INTEGER},
      </if>
      <if test="record.modified != null">
        modified = #{record.modified,jdbcType=INTEGER},
      </if>
      <if test="record.order != null">
        order = #{record.order,jdbcType=INTEGER},
      </if>
      <if test="record.authorid != null">
        authorId = #{record.authorid,jdbcType=INTEGER},
      </if>
      <if test="record.template != null">
        template = #{record.template,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.commentsnum != null">
        commentsNum = #{record.commentsnum,jdbcType=INTEGER},
      </if>
      <if test="record.allowcomment != null">
        allowComment = #{record.allowcomment,jdbcType=CHAR},
      </if>
      <if test="record.allowping != null">
        allowPing = #{record.allowping,jdbcType=CHAR},
      </if>
      <if test="record.allowfeed != null">
        allowFeed = #{record.allowfeed,jdbcType=CHAR},
      </if>
      <if test="record.parent != null">
        parent = #{record.parent,jdbcType=INTEGER},
      </if>
      <if test="record.text != null">
        text = #{record.text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update article
    set cid = #{record.cid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      slug = #{record.slug,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=INTEGER},
      modified = #{record.modified,jdbcType=INTEGER},
      order = #{record.order,jdbcType=INTEGER},
      authorId = #{record.authorid,jdbcType=INTEGER},
      template = #{record.template,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      commentsNum = #{record.commentsnum,jdbcType=INTEGER},
      allowComment = #{record.allowcomment,jdbcType=CHAR},
      allowPing = #{record.allowping,jdbcType=CHAR},
      allowFeed = #{record.allowfeed,jdbcType=CHAR},
      parent = #{record.parent,jdbcType=INTEGER},
      text = #{record.text,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article
    set cid = #{record.cid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      slug = #{record.slug,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=INTEGER},
      modified = #{record.modified,jdbcType=INTEGER},
      order = #{record.order,jdbcType=INTEGER},
      authorId = #{record.authorid,jdbcType=INTEGER},
      template = #{record.template,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      commentsNum = #{record.commentsnum,jdbcType=INTEGER},
      allowComment = #{record.allowcomment,jdbcType=CHAR},
      allowPing = #{record.allowping,jdbcType=CHAR},
      allowFeed = #{record.allowfeed,jdbcType=CHAR},
      parent = #{record.parent,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.minedeed.blog.enity.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="slug != null">
        slug = #{slug,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="modified != null">
        modified = #{modified,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        order = #{order,jdbcType=INTEGER},
      </if>
      <if test="authorid != null">
        authorId = #{authorid,jdbcType=INTEGER},
      </if>
      <if test="template != null">
        template = #{template,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="commentsnum != null">
        commentsNum = #{commentsnum,jdbcType=INTEGER},
      </if>
      <if test="allowcomment != null">
        allowComment = #{allowcomment,jdbcType=CHAR},
      </if>
      <if test="allowping != null">
        allowPing = #{allowping,jdbcType=CHAR},
      </if>
      <if test="allowfeed != null">
        allowFeed = #{allowfeed,jdbcType=CHAR},
      </if>
      <if test="parent != null">
        parent = #{parent,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.minedeed.blog.enity.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      slug = #{slug,jdbcType=VARCHAR},
      created = #{created,jdbcType=INTEGER},
      modified = #{modified,jdbcType=INTEGER},
      order = #{order,jdbcType=INTEGER},
      authorId = #{authorid,jdbcType=INTEGER},
      template = #{template,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      commentsNum = #{commentsnum,jdbcType=INTEGER},
      allowComment = #{allowcomment,jdbcType=CHAR},
      allowPing = #{allowping,jdbcType=CHAR},
      allowFeed = #{allowfeed,jdbcType=CHAR},
      parent = #{parent,jdbcType=INTEGER},
      text = #{text,jdbcType=LONGVARCHAR}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.minedeed.blog.enity.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      slug = #{slug,jdbcType=VARCHAR},
      created = #{created,jdbcType=INTEGER},
      modified = #{modified,jdbcType=INTEGER},
      order = #{order,jdbcType=INTEGER},
      authorId = #{authorid,jdbcType=INTEGER},
      template = #{template,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      commentsNum = #{commentsnum,jdbcType=INTEGER},
      allowComment = #{allowcomment,jdbcType=CHAR},
      allowPing = #{allowping,jdbcType=CHAR},
      allowFeed = #{allowfeed,jdbcType=CHAR},
      parent = #{parent,jdbcType=INTEGER}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
</mapper>